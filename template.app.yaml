apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: demo-color-backend
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: demo-color-backend
    name: demo-color-backend-${COLOR}
  spec:
    replicas: 2
    selector:
      app: demo-color-backend
      deploymentconfig: demo-color-backend-${COLOR}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: demo-color-backend
          deploymentconfig: demo-color-backend-${COLOR}
      spec:
        containers:
        - imagePullPolicy: Always
          name: demo-color-backend-${COLOR}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - demo-color-backend-${COLOR}
        from:
          kind: ImageStreamTag
          name: demo-color-backend:${COLOR}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: demo-color-backend
    name: demo-color-backend-${COLOR}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: demo-color-backend
      deploymentconfig: demo-color-backend-${COLOR}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: demo-color-backend-${COLOR}
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: demo-color-backend-${COLOR}
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: demo-color-backend
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: demo-color-backend-${COLOR}
      weight: 100
    wildcardPolicy: None
parameters:
- name: COLOR
  value: blue